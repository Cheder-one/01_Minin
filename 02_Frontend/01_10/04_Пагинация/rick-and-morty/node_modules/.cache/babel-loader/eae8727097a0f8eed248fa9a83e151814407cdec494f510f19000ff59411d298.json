{"ast":null,"code":"var _jsxFileName = \"/home/username/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/01_Minin/02_Frontend/01_10/04_\\u041F\\u0430\\u0433\\u0438\\u043D\\u0430\\u0446\\u0438\\u044F/rick-and-morty/src/components/episodesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { episodes, fetchAll } from \"../fakeApi/episodesApi\";\nimport { paginate } from \"../utils/paginate\";\nimport Episode from \"./episode\";\nimport GroupList from \"./groupList\";\nimport Pagination from \"./pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EpisodesList = () => {\n  _s();\n  const [episods, setEpisods] = useState();\n  const [years, setYears] = useState([]);\n  const [filter, setFilter] = useState();\n  const [currentPage, setCurrentPage] = useState(1);\n  const count = episodes.length;\n  const pageSize = 8;\n\n  // Функция для получения эпизодов\n  const getEpisodes = years => {\n    fetchAll(years).then(response => setEpisods(response));\n  };\n  const handlePageChange = pageIndex => {\n    setCurrentPage(pageIndex);\n  };\n  const pageEpisodes = paginate(episodes, currentPage, pageSize);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container pt-2\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(GroupList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: pageEpisodes.map(episode => /*#__PURE__*/_jsxDEV(Episode, {\n            ...episode\n          }, episode.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsCount: count,\n            pageSize: pageSize,\n            currentPage: currentPage,\n            onPageChange: handlePageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(EpisodesList, \"FZwFNoyeK+gZ7qSpPVU6sS86Axk=\");\n_c = EpisodesList;\nexport default EpisodesList;\nvar _c;\n$RefreshReg$(_c, \"EpisodesList\");","map":{"version":3,"names":["React","useState","episodes","fetchAll","paginate","Episode","GroupList","Pagination","jsxDEV","_jsxDEV","EpisodesList","_s","episods","setEpisods","years","setYears","filter","setFilter","currentPage","setCurrentPage","count","length","pageSize","getEpisodes","then","response","handlePageChange","pageIndex","pageEpisodes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","episode","id","itemsCount","onPageChange","_c","$RefreshReg$"],"sources":["/home/username/Документы/01_Minin/02_Frontend/01_10/04_Пагинация/rick-and-morty/src/components/episodesList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { episodes, fetchAll } from \"../fakeApi/episodesApi\";\nimport { paginate } from \"../utils/paginate\";\nimport Episode from \"./episode\";\nimport GroupList from \"./groupList\";\nimport Pagination from \"./pagination\";\n\nconst EpisodesList = () => {\n  const [episods, setEpisods] = useState();\n  const [years, setYears] = useState([]);\n  const [filter, setFilter] = useState();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const count = episodes.length;\n  const pageSize = 8;\n\n  // Функция для получения эпизодов\n  const getEpisodes = (years) => {\n    fetchAll(years).then((response) => setEpisods(response));\n  };\n\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex);\n  };\n\n  const pageEpisodes = paginate(episodes, currentPage, pageSize);\n\n  return (\n    <div className=\"container pt-2\">\n      <div className=\"row\">\n        <div className=\"col-4\">\n          <GroupList />\n        </div>\n        <div className=\"col-8\">\n          <div className=\"row\">\n            {pageEpisodes.map((episode) => (\n              <Episode key={episode.id} {...episode} />\n            ))}\n          </div>\n          <div className=\"row\">\n            <Pagination\n              itemsCount={count}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChange={handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EpisodesList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,wBAAwB;AAC3D,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,EAAE;EACxC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,EAAE;EAEtC,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMmB,KAAK,GAAGlB,QAAQ,CAACmB,MAAM;EAC7B,MAAMC,QAAQ,GAAG,CAAC;;EAElB;EACA,MAAMC,WAAW,GAAIT,KAAK,IAAK;IAC7BX,QAAQ,CAACW,KAAK,CAAC,CAACU,IAAI,CAAEC,QAAQ,IAAKZ,UAAU,CAACY,QAAQ,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMC,gBAAgB,GAAIC,SAAS,IAAK;IACtCR,cAAc,CAACQ,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMC,YAAY,GAAGxB,QAAQ,CAACF,QAAQ,EAAEgB,WAAW,EAAEI,QAAQ,CAAC;EAE9D,oBACEb,OAAA;IAAKoB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BrB,OAAA;MAAKoB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBrB,OAAA;QAAKoB,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpBrB,OAAA,CAACH,SAAS;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT,eACNzB,OAAA;QAAKoB,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpBrB,OAAA;UAAKoB,SAAS,EAAC,KAAK;UAAAC,QAAA,EACjBF,YAAY,CAACO,GAAG,CAAEC,OAAO,iBACxB3B,OAAA,CAACJ,OAAO;YAAA,GAAsB+B;UAAO,GAAvBA,OAAO,CAACC,EAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACzB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACE,eACNzB,OAAA;UAAKoB,SAAS,EAAC,KAAK;UAAAC,QAAA,eAClBrB,OAAA,CAACF,UAAU;YACT+B,UAAU,EAAElB,KAAM;YAClBE,QAAQ,EAAEA,QAAS;YACnBJ,WAAW,EAAEA,WAAY;YACzBqB,YAAY,EAAEb;UAAiB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAC/B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACvB,EAAA,CA5CID,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}